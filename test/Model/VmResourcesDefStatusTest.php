<?php
/**
 * VmResourcesDefStatusTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Nutanix Intentful API
 *
 * Move programming from the user to the machine.
 *
 * The version of the OpenAPI document: 3.1.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.3.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * VmResourcesDefStatusTest Class Doc Comment
 *
 * @category    Class
 * @description VM Resources Status Definition.
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class VmResourcesDefStatusTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "VmResourcesDefStatus"
     */
    public function testVmResourcesDefStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "num_threads_per_core"
     */
    public function testPropertyNumThreadsPerCore()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_agent_vm"
     */
    public function testPropertyIsAgentVm()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "protection_policy_state"
     */
    public function testPropertyProtectionPolicyState()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "memory_size_mib"
     */
    public function testPropertyMemorySizeMib()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "boot_config"
     */
    public function testPropertyBootConfig()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disk_list"
     */
    public function testPropertyDiskList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "serial_port_list"
     */
    public function testPropertySerialPortList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_vcpu_hard_pinned"
     */
    public function testPropertyIsVcpuHardPinned()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "power_state"
     */
    public function testPropertyPowerState()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "recovery_plan_state_list"
     */
    public function testPropertyRecoveryPlanStateList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "effective_storage_config"
     */
    public function testPropertyEffectiveStorageConfig()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "num_vcpus_per_socket"
     */
    public function testPropertyNumVcpusPerSocket()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "num_sockets"
     */
    public function testPropertyNumSockets()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hardware_virtualization_enabled"
     */
    public function testPropertyHardwareVirtualizationEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "storage_config"
     */
    public function testPropertyStorageConfig()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "protection_type"
     */
    public function testPropertyProtectionType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gpu_list"
     */
    public function testPropertyGpuList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "machine_type"
     */
    public function testPropertyMachineType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hardware_clock_timezone"
     */
    public function testPropertyHardwareClockTimezone()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "guest_customization"
     */
    public function testPropertyGuestCustomization()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "power_state_mechanism"
     */
    public function testPropertyPowerStateMechanism()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "vga_console_enabled"
     */
    public function testPropertyVgaConsoleEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "memory_overcommit_enabled"
     */
    public function testPropertyMemoryOvercommitEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "vnuma_config"
     */
    public function testPropertyVnumaConfig()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "nic_list"
     */
    public function testPropertyNicList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "host_reference"
     */
    public function testPropertyHostReference()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "guest_os_id"
     */
    public function testPropertyGuestOsId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "guest_tools"
     */
    public function testPropertyGuestTools()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gpu_console_enabled"
     */
    public function testPropertyGpuConsoleEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "vtpm_config"
     */
    public function testPropertyVtpmConfig()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_cpu_passthrough"
     */
    public function testPropertyEnableCpuPassthrough()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "parent_reference"
     */
    public function testPropertyParentReference()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hypervisor_type"
     */
    public function testPropertyHypervisorType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disable_branding"
     */
    public function testPropertyDisableBranding()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
