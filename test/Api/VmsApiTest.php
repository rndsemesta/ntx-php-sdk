<?php
/**
 * VmsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Nutanix Intentful API
 *
 * Move programming from the user to the machine.
 *
 * The version of the OpenAPI document: 3.1.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.3.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * VmsApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class VmsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for vmsCapabilitiesGet
     *
     * Capability information for VMs..
     *
     */
    public function testVmsCapabilitiesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vmsCapabilitiesOptions
     *
     * Returns metadata for /vms/capabilities endpoint..
     *
     */
    public function testVmsCapabilitiesOptions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vmsListPost
     *
     * Get a list of existing VMs.
     *
     */
    public function testVmsListPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vmsPost
     *
     * Create a new VM.
     *
     */
    public function testVmsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vmsUuidAcpiRebootPost
     *
     * Create a VM acpi_reboot request..
     *
     */
    public function testVmsUuidAcpiRebootPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vmsUuidAcpiShutdownPost
     *
     * Create a VM acpi_shutdown request..
     *
     */
    public function testVmsUuidAcpiShutdownPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vmsUuidClonePost
     *
     * Clone a vm..
     *
     */
    public function testVmsUuidClonePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vmsUuidDelete
     *
     * Delete an existing VM.
     *
     */
    public function testVmsUuidDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vmsUuidExportPost
     *
     * Create an OVA object..
     *
     */
    public function testVmsUuidExportPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vmsUuidGet
     *
     * Get an existing VM.
     *
     */
    public function testVmsUuidGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vmsUuidGuestRebootPost
     *
     * Create a VM guest_reboot request..
     *
     */
    public function testVmsUuidGuestRebootPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vmsUuidGuestShutdownPost
     *
     * Create a VM guest_shutdown request..
     *
     */
    public function testVmsUuidGuestShutdownPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vmsUuidMigrateDisksPost
     *
     * Migrate disks to a different container.
     *
     */
    public function testVmsUuidMigrateDisksPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vmsUuidPauseReplicationPost
     *
     * Pause the replication for the VM..
     *
     */
    public function testVmsUuidPauseReplicationPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vmsUuidPowerCyclePost
     *
     * Create a VM power_cycle request..
     *
     */
    public function testVmsUuidPowerCyclePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vmsUuidPut
     *
     * Update an existing VM.
     *
     */
    public function testVmsUuidPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vmsUuidResetPost
     *
     * Create a VM reset request..
     *
     */
    public function testVmsUuidResetPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vmsUuidResumeReplicationPost
     *
     * Resume the replication for the VM..
     *
     */
    public function testVmsUuidResumeReplicationPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vmsUuidRevertPost
     *
     * Revert the vm to the given recovery point..
     *
     */
    public function testVmsUuidRevertPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vmsUuidSnapshotPost
     *
     * Create a vm recovery point..
     *
     */
    public function testVmsUuidSnapshotPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vmsUuidUpdateIpPut
     *
     * Request IP addresses for NICs with the given UUIDs..
     *
     */
    public function testVmsUuidUpdateIpPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vmsUuidValidateMigrationPost
     *
     * Validates the feasibility of VM migration to given migration target..
     *
     */
    public function testVmsUuidValidateMigrationPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
