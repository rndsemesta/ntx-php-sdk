<?php
/**
 * VirtualNetworkApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Nutanix Intentful API
 *
 * Move programming from the user to the machine.
 *
 * The version of the OpenAPI document: 3.1.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.3.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * VirtualNetworkApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class VirtualNetworkApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for virtualNetworksListPost
     *
     * Get a list of existing virtual networks.
     *
     */
    public function testVirtualNetworksListPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for virtualNetworksPost
     *
     * Create a new virtual network.
     *
     */
    public function testVirtualNetworksPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for virtualNetworksUuidDelete
     *
     * Delete a existing virtual network.
     *
     */
    public function testVirtualNetworksUuidDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for virtualNetworksUuidGet
     *
     * Get a existing virtual network.
     *
     */
    public function testVirtualNetworksUuidGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for virtualNetworksUuidPut
     *
     * Update a existing virtual network.
     *
     */
    public function testVirtualNetworksUuidPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpcsListPost
     *
     * Get a list of existing VPCs.
     *
     */
    public function testVpcsListPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpcsPost
     *
     * Create a new VPC.
     *
     */
    public function testVpcsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpcsUuidDelete
     *
     * Delete a existing VPC.
     *
     */
    public function testVpcsUuidDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpcsUuidGet
     *
     * Get a existing VPC.
     *
     */
    public function testVpcsUuidGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpcsUuidPacketTracePost
     *
     * Logical Packet Trace.
     *
     */
    public function testVpcsUuidPacketTracePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpcsUuidPut
     *
     * Update a existing VPC.
     *
     */
    public function testVpcsUuidPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
