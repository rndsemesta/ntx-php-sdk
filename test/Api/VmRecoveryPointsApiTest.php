<?php
/**
 * VmRecoveryPointsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Nutanix Intentful API
 *
 * Move programming from the user to the machine.
 *
 * The version of the OpenAPI document: 3.1.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.3.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * VmRecoveryPointsApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class VmRecoveryPointsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for vmRecoveryPointsClonePost
     *
     * Clone a vm recovery point for the given time point..
     *
     */
    public function testVmRecoveryPointsClonePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vmRecoveryPointsListPost
     *
     * Get a list of existing vm recovery point.
     *
     */
    public function testVmRecoveryPointsListPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vmRecoveryPointsPost
     *
     * Create a new vm recovery point.
     *
     */
    public function testVmRecoveryPointsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vmRecoveryPointsRestorePost
     *
     * Restore a vm recovery point for the given time point..
     *
     */
    public function testVmRecoveryPointsRestorePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vmRecoveryPointsUuidClonePost
     *
     * Clone a vm_recovery_point..
     *
     */
    public function testVmRecoveryPointsUuidClonePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vmRecoveryPointsUuidDelete
     *
     * Delete a existing vm recovery point.
     *
     */
    public function testVmRecoveryPointsUuidDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vmRecoveryPointsUuidGet
     *
     * Get a existing vm recovery point.
     *
     */
    public function testVmRecoveryPointsUuidGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vmRecoveryPointsUuidPromotePost
     *
     * Promote a vm recovery point..
     *
     */
    public function testVmRecoveryPointsUuidPromotePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vmRecoveryPointsUuidPut
     *
     * Update a existing vm recovery point.
     *
     */
    public function testVmRecoveryPointsUuidPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vmRecoveryPointsUuidRestorePost
     *
     * Restore a vm recovery point..
     *
     */
    public function testVmRecoveryPointsUuidRestorePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vmRecoveryPointsUuidValidateRestorePost
     *
     * Validates the feasibility of vm restoration from the vm recovery point..
     *
     */
    public function testVmRecoveryPointsUuidValidateRestorePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
