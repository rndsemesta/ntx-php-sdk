<?php
/**
 * OvasApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Nutanix Intentful API
 *
 * Move programming from the user to the machine.
 *
 * The version of the OpenAPI document: 3.1.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.3.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * OvasApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class OvasApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for ovasCapabilitiesGet
     *
     * Capability information for OVAs..
     *
     */
    public function testOvasCapabilitiesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ovasCapabilitiesOptions
     *
     * Returns metadata for /ovas/capabilities endpoint..
     *
     */
    public function testOvasCapabilitiesOptions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ovasListPost
     *
     * Get a list of existing OVAs.
     *
     */
    public function testOvasListPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ovasPost
     *
     * Create a new ova.
     *
     */
    public function testOvasPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ovasUuidChunksConcatenatePost
     *
     * Concatenate uploaded file chunks of an OVA.
     *
     */
    public function testOvasUuidChunksConcatenatePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ovasUuidChunksHead
     *
     * Uploaded OVA file info.
     *
     */
    public function testOvasUuidChunksHead()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ovasUuidChunksPut
     *
     * Upload file chunk of an OVA.
     *
     */
    public function testOvasUuidChunksPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ovasUuidDelete
     *
     * Delete a existing OVA.
     *
     */
    public function testOvasUuidDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ovasUuidDisksDiskIdGet
     *
     * Get an existing disk of an OVA.
     *
     */
    public function testOvasUuidDisksDiskIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ovasUuidDisksGet
     *
     * Gets a list of existing disks of an OVA.
     *
     */
    public function testOvasUuidDisksGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ovasUuidFileGet
     *
     * Get OVA Contents.
     *
     */
    public function testOvasUuidFileGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ovasUuidGet
     *
     * Get an existing OVA.
     *
     */
    public function testOvasUuidGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ovasUuidPut
     *
     * Update name of an existing OVA.
     *
     */
    public function testOvasUuidPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ovasUuidVmSpecGet
     *
     * Get VM spec from an OVA..
     *
     */
    public function testOvasUuidVmSpecGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
