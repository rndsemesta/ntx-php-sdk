<?php
/**
 * RoutingPoliciesApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Nutanix Intentful API
 *
 * Move programming from the user to the machine.
 *
 * The version of the OpenAPI document: 3.1.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.3.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * RoutingPoliciesApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class RoutingPoliciesApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for routingPoliciesListPost
     *
     * Get a list of existing routing_policies.
     *
     */
    public function testRoutingPoliciesListPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for routingPoliciesPost
     *
     * Create a new routing_policy.
     *
     */
    public function testRoutingPoliciesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for routingPoliciesUuidDelete
     *
     * Delete a existing routing_policy.
     *
     */
    public function testRoutingPoliciesUuidDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for routingPoliciesUuidGet
     *
     * Get a existing routing_policy.
     *
     */
    public function testRoutingPoliciesUuidGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for routingPoliciesUuidPut
     *
     * Update a existing routing_policy.
     *
     */
    public function testRoutingPoliciesUuidPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for routingPoliciesUuidResetCountersPost
     *
     * Clear routing policy counters..
     *
     */
    public function testRoutingPoliciesUuidResetCountersPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for virtualNetworksRoutingPoliciesListPost
     *
     * Get a list of existing routing_policies.
     *
     */
    public function testVirtualNetworksRoutingPoliciesListPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for virtualNetworksRoutingPoliciesPost
     *
     * Create a new routing_policy.
     *
     */
    public function testVirtualNetworksRoutingPoliciesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for virtualNetworksRoutingPoliciesUuidDelete
     *
     * Delete a existing routing_policy.
     *
     */
    public function testVirtualNetworksRoutingPoliciesUuidDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for virtualNetworksRoutingPoliciesUuidGet
     *
     * Get a existing routing_policy.
     *
     */
    public function testVirtualNetworksRoutingPoliciesUuidGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for virtualNetworksRoutingPoliciesUuidPut
     *
     * Update a existing routing_policy.
     *
     */
    public function testVirtualNetworksRoutingPoliciesUuidPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for virtualNetworksRoutingPoliciesUuidResetCountersPost
     *
     * Clear routing policy counters..
     *
     */
    public function testVirtualNetworksRoutingPoliciesUuidResetCountersPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for virtualNetworksUuidRoutingPoliciesResetCountersPost
     *
     * Clear all routing policy counters..
     *
     */
    public function testVirtualNetworksUuidRoutingPoliciesResetCountersPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for vpcsUuidRoutingPoliciesResetCountersPost
     *
     * Clear all routing policy counters..
     *
     */
    public function testVpcsUuidRoutingPoliciesResetCountersPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
